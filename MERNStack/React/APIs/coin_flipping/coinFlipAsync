function tossCoin() {
	return Math.random() > 0.5 ? "heads" : "tails";
}

async function runloop(count) {
	let headsCount = 0;
	let attempts = 0;
	while (headsCount < count) {
		attempts++;
		let result = await tossCoin(); // The loop awaits the toosCoin function so the result can vbe optained
		if (result === "heads") {
			headsCount++;
		} else {
			headsCount = 0;
		}
	}
	return attempts;
}

function fiveHeads() {
	return new Promise(async (resolve, reject) => {
        let count = 10;
		runloop(count).then((attempts) => {
			resolve(`It took ${attempts} tries to flip ${count} "heads"`);  // The Loop is Async and the promise just waits for it to finish using the .then() so it can resolve
		});
	});
}

fiveHeads()
	.then((res) => console.log(res))
	.catch((err) => console.log(err));

console.log("When does this run now?"); // This Function wasnt blocked by the excuton of the promise

for (let index = 0; index < 10; index++) {  // This Loop wasnt blocked by the excuton of the promise
	console.log(index);
}
